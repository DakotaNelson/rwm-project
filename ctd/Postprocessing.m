% THIS SCRIPT ASSUMES YOU HAVE IMPORTED DATA.CSV USING THE DEFAULT NAMES

TemperatureC = Temperature .* 0.49; % Converts the temperature ADC reading to degrees C
% See: http://www.ti.com/lit/ds/symlink/lm35.pdf

PressurekPa = ((Pressure .* .0049) + 0.2) / 0.009; % Converts pressure ADC reading to kPa
% See: http://cache.freescale.com/files/sensors/doc/data_sheet/MPX5500.pdf

ConductivityV = Conductivity .* .0049; % Convert to volts for now.
ConductivityR =  20 * (1./ (5 ./ ConductivityV - 1));
% Given that we have a 2 kohm resistor as R1 and a fixed Vin of 5 volts.

ConductivityR(ConductivityR<0) = NaN; % If the conductivity goes super whack, it's because open circuit and is therefore junk.
ConductivityR(ConductivityR>15) = NaN;

% Create alternate timescales.
timeMinutes = (Timestamp./1000)./60;
timeHours = timeMinutes ./ 60;


%  Auto-generated by MATLAB on 20-Apr-2014 12:14:24
% Create figure
figure1 = figure;

% Create axes
axes1 = axes('Parent',figure1,'FontSize',14);
box(axes1,'on');
hold(axes1,'all');

% Create multiple lines using matrix input to plot
plot1 = plot(timeMinutes,TemperatureC,'Parent',axes1,'LineWidth',2);
plot2 = plot(timeMinutes,PressurekPa,'Parent',axes1,'LineWidth',2);
plot3 = plot(timeMinutes,ConductivityR,'Parent',axes1,'LineWidth',2);
set(plot1,'DisplayName','Temperature');
set(plot2,'DisplayName','Pressure');
set(plot3,'DisplayName','Conductivity');

% Create xlabel
xlabel('Time (minutes)','FontSize',14);

% Create ylabel
ylabel('Temperature (degrees C), Pressure (kPa), Conductivity (100  \Omega /cm)',...
    'FontSize',14);

% Create title
title({'CTD Sensor Data'},'FontSize',24);

% Create legend
legend1 = legend(axes1,'show');
set(legend1,'Location','Best');